{"version":3,"sources":["firebase.js","components/Login.js","components/Register.js","components/Reserve.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","getAnalytics","Login","_ref","onLoginSuccess","email","setEmail","useState","password","setPassword","navigate","useNavigate","googleProvider","GoogleAuthProvider","React","createElement","onSubmit","async","e","preventDefault","signInWithEmailAndPassword","alert","error","message","type","placeholder","value","onChange","target","style","marginTop","onClick","user","signInWithPopup","concat","displayName","padding","Register","createUserWithEmailAndPassword","window","location","href","provider","CLIENT_ID","SCOPES","Reserve","events","setEvents","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","rooms","id","name","times","useEffect","checkGoogleLoaded","google","setTimeout","accounts","oauth2","initTokenClient","client_id","scope","callback","response","access_token","loadEvents","requestAccessToken","accessToken","gapi","load","client","init","clientId","then","request","path","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","console","color","newReservation","room_id","start_time","end_time","parseInt","split","reservation","calendar","insert","calendarId","resource","timeZone","prevEvents","room","find","r","required","disabled","key","_objectSpread","FullCalendar","plugins","dayGridPlugin","interactionPlugin","initialView","headerToolbar","left","center","right","App","Link","to","Routes","Route","element","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.8278ef40.chunk.js","sourcesContent":["// Import Firebase modules\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\"; // Import getAuth from firebase/auth\nimport { getAnalytics } from \"firebase/analytics\"; // This is optional, remove if not used\n\n// Your Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyASQGxmHPAnOuqogJ-GshsKxZs7z_rVFhc\",\n  authDomain: \"cloud-pro-salma.firebaseapp.com\",\n  projectId: \"cloud-pro-salma\",\n  storageBucket: \"cloud-pro-salma.firebasestorage.app\",\n  messagingSenderId: \"270378042783\",\n  appId: \"1:270378042783:web:7d23dc50345ca548b329aa\",\n  measurementId: \"G-HCN9MZ9RYX\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication\nexport const auth = getAuth(app); // Fix: Export the auth instance\n\n// Optional: Initialize Analytics if you need it\nconst analytics = getAnalytics(app);\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\n\nconst Login = ({ onLoginSuccess }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const googleProvider = new GoogleAuthProvider();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      alert(\"Login successful!\");\n      if (typeof onLoginSuccess === \"function\") {\n        onLoginSuccess(); // Notify App about successful login\n      }\n      navigate(\"/reserve\"); // Redirect to Reserve after login\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n      alert(`Welcome, ${user.displayName || user.email}! Google login successful.`);\n      if (typeof onLoginSuccess === \"function\") {\n        onLoginSuccess(user.email); // Notify App with the authenticated user's email\n      }\n      navigate(\"/reserve\"); // Redirect to Reserve after Google login\n    } catch (error) {\n      alert(`Google login failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <div style={{ marginTop: \"1rem\" }}>\n        <button onClick={handleGoogleLogin} style={{ padding: \"0.5rem 1rem\" }}>\n          Login with Google\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\n\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert(\"Registration successful!\");\n      window.location.href = \"/login\";\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleGoogleRegister = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      alert(\"Registered with Google successfully!\");\n      window.location.href = \"/login\"; // Redirect to login or home page as per your app flow\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={handleRegister}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      <button onClick={handleGoogleRegister}>Register with Google</button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\"; // Replace with your Google OAuth Client ID\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]); // Calendar events\r\n  const [error, setError] = useState(null); // Error messages\r\n  const [token, setToken] = useState(null); // Google OAuth token\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Selected room\r\n  const [availableTimes, setAvailableTimes] = useState([]); // Available times\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  // Initialize Google API and authenticate\r\n  useEffect(() => {\r\n    const initializeGIS = () => {\r\n      /* eslint-disable no-undef */\r\n      const tokenClient = google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (response) => {\r\n          if (response.access_token) {\r\n            setToken(response.access_token);\r\n            loadEvents(response.access_token);\r\n          } else {\r\n            setError(\"Error obtaining Google token.\");\r\n          }\r\n        },\r\n      });\r\n\r\n      tokenClient.requestAccessToken();\r\n    };\r\n\r\n    const checkGoogleLoaded = () => {\r\n      if (typeof google === \"undefined\") {\r\n        setTimeout(checkGoogleLoaded, 100);\r\n      } else {\r\n        initializeGIS();\r\n      }\r\n    };\r\n\r\n    checkGoogleLoaded();\r\n  }, []);\r\n\r\n  // Load events from Google Calendar\r\n  const loadEvents = (accessToken) => {\r\n    gapi.load(\"client\", () => {\r\n      gapi.client\r\n        .init({\r\n          apiKey: \"\",\r\n          clientId: CLIENT_ID,\r\n          scope: SCOPES,\r\n        })\r\n        .then(() => {\r\n          return gapi.client.request({\r\n            path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\r\n          });\r\n        })\r\n        .then((response) => {\r\n          const formattedEvents = response.result.items.map((event) => ({\r\n            title: event.summary,\r\n            start: event.start.dateTime,\r\n            end: event.end.dateTime,\r\n          }));\r\n          setEvents(formattedEvents);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading events from Google Calendar:\", error);\r\n          setError(\"Failed to load events. Please try again.\");\r\n        });\r\n    });\r\n  };\r\n\r\n  // Add a reservation to Google Calendar\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    gapi.client.calendar.events\r\n      .insert({\r\n        calendarId: \"primary\",\r\n        resource: {\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // Add the reservation locally to events\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(`Reservation confirmed and added to Google Calendar.`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding reservation to Google Calendar:\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      setError(\"You must be logged in to add a reservation.\");\r\n      return;\r\n    }\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    // Add to Google Calendar\r\n    addReservationToGoogleCalendar(newReservation);\r\n\r\n    // Reset form\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room: </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time: </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Reserve from \"./components/Reserve\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Welcome to Cloud Project</h1>\n      <nav>\n        <Link to=\"/login\">Login</Link>\n        <br />\n        <Link to=\"/register\">Register</Link>\n        <br />\n        <Link to=\"/reserve\">Reserve</Link>\n      </nav>\n\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/reserve\" element={<Reserve />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport \"./index.css\";\nimport Reserve from \"./components/Reserve\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/reserve\" element={<Reserve />} />\n      </Routes>\n    </Router>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}