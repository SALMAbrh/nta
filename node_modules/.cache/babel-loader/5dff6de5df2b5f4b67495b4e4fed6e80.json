{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Bureau\\\\S5\\\\cloud-project\\\\src\\\\components\\\\Reserve.js\";\n/* global gapi */ // Inform ESLint that gapi is globally defined\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nconst CLIENT_ID = \"100174910445-i34qd8f9l36pipfd4cce62jhm1u3be8h.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction Reserve() {\n  const [events, setEvents] = useState([]); // Calendar events\n  const [token, setToken] = useState(null); // Google OAuth token\n  const [user, setUser] = useState(null); // Google authenticated user\n  const [error, setError] = useState(null); // Error messages\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Selected room\n  const [availableTimes, setAvailableTimes] = useState([]); // Available times\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: \"\"\n  });\n  const rooms = [{\n    id: \"room1\",\n    name: \"Room 1\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room2\",\n    name: \"Room 2\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n\n  // Initialize gapi client on component mount\n  useEffect(() => {\n    const initializeGapiClient = async () => {\n      if (typeof gapi !== \"undefined\") {\n        gapi.load(\"client:auth2\", async () => {\n          try {\n            await gapi.auth2.init({\n              client_id: CLIENT_ID,\n              scope: SCOPES\n            });\n            console.log(\"Google API client initialized\");\n          } catch (error) {\n            console.error(\"Error initializing Google API client:\", error);\n            setError(\"Failed to initialize Google API. Check your configuration.\");\n          }\n        });\n      } else {\n        console.error(\"gapi is not defined. Make sure the script is loaded.\");\n        setError(\"gapi is not defined. Ensure the script is included in index.html.\");\n      }\n    };\n    initializeGapiClient();\n  }, []);\n\n  // Handle Google Login\n  const handleGoogleLogin = async () => {\n    try {\n      const GoogleAuth = gapi.auth2.getAuthInstance();\n      const googleUser = await GoogleAuth.signIn();\n      const accessToken = googleUser.getAuthResponse().access_token;\n      setUser(googleUser.getBasicProfile());\n      setToken(accessToken);\n      console.log(\"User logged in:\", googleUser.getBasicProfile());\n      console.log(\"Access Token:\", accessToken);\n\n      // Load Google Calendar events\n      loadEvents(accessToken);\n    } catch (error) {\n      console.error(\"Google login error:\", error);\n      setError(\"Failed to log in with Google. Please check your setup.\");\n    }\n  };\n\n  // Load events from Google Calendar\n  const loadEvents = accessToken => {\n    gapi.client.request({\n      path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      const formattedEvents = response.result.items.map(event => ({\n        title: event.summary,\n        start: event.start.dateTime,\n        end: event.end.dateTime\n      }));\n      setEvents(formattedEvents);\n      console.log(\"Loaded events:\", formattedEvents);\n    }).catch(error => {\n      console.error(\"Error loading Google Calendar events:\", error);\n      setError(\"Failed to load events from Google Calendar.\");\n    });\n  };\n\n  // Add a reservation to Google Calendar\n  const addReservationToGoogleCalendar = reservation => {\n    if (!token) {\n      setError(\"You must be logged in to add a reservation.\");\n      return;\n    }\n    gapi.client.request({\n      path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: {\n          dateTime: reservation.start_time,\n          timeZone: \"UTC\"\n        },\n        end: {\n          dateTime: reservation.end_time,\n          timeZone: \"UTC\"\n        }\n      })\n    }).then(() => {\n      setEvents(prevEvents => [...prevEvents, {\n        title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: reservation.start_time,\n        end: reservation.end_time\n      }]);\n      alert(\"Reservation confirmed and added to Google Calendar.\");\n    }).catch(error => {\n      console.error(\"Error adding reservation to Google Calendar:\", error);\n      setError(\"Failed to add reservation. Please try again.\");\n    });\n  };\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n  const handleReservation = e => {\n    e.preventDefault();\n    const newReservation = {\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}:00`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    };\n    addReservationToGoogleCalendar(newReservation);\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: \"\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Room Reservations\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, error), !user ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleGoogleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Login with Google\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Welcome, \", user.getName(), \"!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleReservation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Room: \"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleRoomChange,\n    value: selectedRoom,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Select a room\"), rooms.map(room => /*#__PURE__*/React.createElement(\"option\", {\n    key: room.id,\n    value: room.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, room.name))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: formData.date,\n    onChange: e => setFormData({\n      ...formData,\n      date: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(\"select\", {\n    value: formData.time,\n    onChange: e => setFormData({\n      ...formData,\n      time: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Select a time\"), availableTimes.map(time => /*#__PURE__*/React.createElement(\"option\", {\n    key: time,\n    value: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, time))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: formData.email,\n    onChange: e => setFormData({\n      ...formData,\n      email: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Reserve\")), /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin],\n    initialView: \"dayGridMonth\",\n    events: events,\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Reserve;","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","CLIENT_ID","SCOPES","Reserve","events","setEvents","token","setToken","user","setUser","error","setError","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","initializeGapiClient","gapi","load","auth2","init","client_id","scope","console","log","handleGoogleLogin","GoogleAuth","getAuthInstance","googleUser","signIn","accessToken","getAuthResponse","access_token","getBasicProfile","loadEvents","client","request","path","method","headers","Authorization","then","response","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","addReservationToGoogleCalendar","reservation","body","JSON","stringify","room_id","start_time","timeZone","end_time","prevEvents","alert","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","newReservation","parseInt","split","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","getName","onSubmit","onChange","required","disabled","key","type","plugins","initialView","headerToolbar","left","center","right"],"sources":["C:/Users/DELL/OneDrive/Bureau/S5/cloud-project/src/components/Reserve.js"],"sourcesContent":["/* global gapi */ // Inform ESLint that gapi is globally defined\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"100174910445-i34qd8f9l36pipfd4cce62jhm1u3be8h.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]); // Calendar events\r\n  const [token, setToken] = useState(null); // Google OAuth token\r\n  const [user, setUser] = useState(null); // Google authenticated user\r\n  const [error, setError] = useState(null); // Error messages\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Selected room\r\n  const [availableTimes, setAvailableTimes] = useState([]); // Available times\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  // Initialize gapi client on component mount\r\n  useEffect(() => {\r\n    const initializeGapiClient = async () => {\r\n      if (typeof gapi !== \"undefined\") {\r\n        gapi.load(\"client:auth2\", async () => {\r\n          try {\r\n            await gapi.auth2.init({\r\n              client_id: CLIENT_ID,\r\n              scope: SCOPES,\r\n            });\r\n            console.log(\"Google API client initialized\");\r\n          } catch (error) {\r\n            console.error(\"Error initializing Google API client:\", error);\r\n            setError(\"Failed to initialize Google API. Check your configuration.\");\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"gapi is not defined. Make sure the script is loaded.\");\r\n        setError(\"gapi is not defined. Ensure the script is included in index.html.\");\r\n      }\r\n    };\r\n\r\n    initializeGapiClient();\r\n  }, []);\r\n\r\n  // Handle Google Login\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const GoogleAuth = gapi.auth2.getAuthInstance();\r\n      const googleUser = await GoogleAuth.signIn();\r\n      const accessToken = googleUser.getAuthResponse().access_token;\r\n\r\n      setUser(googleUser.getBasicProfile());\r\n      setToken(accessToken);\r\n\r\n      console.log(\"User logged in:\", googleUser.getBasicProfile());\r\n      console.log(\"Access Token:\", accessToken);\r\n\r\n      // Load Google Calendar events\r\n      loadEvents(accessToken);\r\n    } catch (error) {\r\n      console.error(\"Google login error:\", error);\r\n      setError(\"Failed to log in with Google. Please check your setup.\");\r\n    }\r\n  };\r\n\r\n  // Load events from Google Calendar\r\n  const loadEvents = (accessToken) => {\r\n    gapi.client\r\n      .request({\r\n        path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const formattedEvents = response.result.items.map((event) => ({\r\n          title: event.summary,\r\n          start: event.start.dateTime,\r\n          end: event.end.dateTime,\r\n        }));\r\n        setEvents(formattedEvents);\r\n        console.log(\"Loaded events:\", formattedEvents);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading Google Calendar events:\", error);\r\n        setError(\"Failed to load events from Google Calendar.\");\r\n      });\r\n  };\r\n\r\n  // Add a reservation to Google Calendar\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    if (!token) {\r\n      setError(\"You must be logged in to add a reservation.\");\r\n      return;\r\n    }\r\n\r\n    gapi.client\r\n      .request({\r\n        path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        }),\r\n      })\r\n      .then(() => {\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(\"Reservation confirmed and added to Google Calendar.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding reservation to Google Calendar:\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    addReservationToGoogleCalendar(newReservation);\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {!user ? (\r\n        <button onClick={handleGoogleLogin}>Login with Google</button>\r\n      ) : (\r\n        <p>Welcome, {user.getName()}!</p>\r\n      )}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room: </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time: </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}