{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Bureau\\\\S5\\\\cloud-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useEffect,useState}from\"react\";import FullCalendar from\"@fullcalendar/react\";import dayGridPlugin from\"@fullcalendar/daygrid\";import interactionPlugin from\"@fullcalendar/interaction\";const CLIENT_ID=\"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\";// Replace with your Google OAuth Client ID\nconst SCOPES=\"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";function Reserve(){const[events,setEvents]=useState([]);// Calendar events\nconst[error,setError]=useState(null);// Error messages\nconst[token,setToken]=useState(null);// Google OAuth token\nconst[selectedRoom,setSelectedRoom]=useState(\"\");// Selected room\nconst[availableTimes,setAvailableTimes]=useState([]);// Available times\nconst[formData,setFormData]=useState({date:\"\",time:\"\",email:\"\"});const rooms=[{id:\"room1\",name:\"Room 1\",times:[\"09:00\",\"10:00\",\"11:00\"]},{id:\"room2\",name:\"Room 2\",times:[\"12:00\",\"13:00\",\"14:00\"]}];// Initialize Google API and authenticate\nuseEffect(()=>{const initializeGIS=()=>{/* eslint-disable no-undef */const tokenClient=google.accounts.oauth2.initTokenClient({client_id:CLIENT_ID,scope:SCOPES,callback:response=>{if(response.access_token){setToken(response.access_token);loadEvents(response.access_token);}else{setError(\"Error obtaining Google token.\");}}});tokenClient.requestAccessToken();};const checkGoogleLoaded=()=>{if(typeof google===\"undefined\"){setTimeout(checkGoogleLoaded,100);}else{initializeGIS();}};checkGoogleLoaded();},[]);// Load events from Google Calendar\nconst loadEvents=accessToken=>{gapi.load(\"client\",()=>{gapi.client.init({apiKey:\"\",clientId:CLIENT_ID,scope:SCOPES}).then(()=>{return gapi.client.request({path:\"https://www.googleapis.com/calendar/v3/calendars/primary/events\"});}).then(response=>{const formattedEvents=response.result.items.map(event=>({title:event.summary,start:event.start.dateTime,end:event.end.dateTime}));setEvents(formattedEvents);}).catch(error=>{console.error(\"Error loading events from Google Calendar:\",error);setError(\"Failed to load events. Please try again.\");});});};// Add a reservation to Google Calendar\nconst addReservationToGoogleCalendar=reservation=>{gapi.client.calendar.events.insert({calendarId:\"primary\",resource:{summary:\"Room \".concat(reservation.room_id,\" - Reserved by \").concat(reservation.email),start:{dateTime:reservation.start_time,timeZone:\"UTC\"},end:{dateTime:reservation.end_time,timeZone:\"UTC\"}}}).then(response=>{// Add the reservation locally to events\nsetEvents(prevEvents=>[...prevEvents,{title:\"Room \".concat(reservation.room_id,\" - Reserved by \").concat(reservation.email),start:reservation.start_time,end:reservation.end_time}]);alert(\"Reservation confirmed and added to Google Calendar.\");}).catch(error=>{console.error(\"Error adding reservation to Google Calendar:\",error);setError(\"Failed to add reservation. Please try again.\");});};const handleRoomChange=e=>{const room=rooms.find(r=>r.id===e.target.value);setSelectedRoom(room.id);setAvailableTimes(room.times);};const handleReservation=e=>{e.preventDefault();if(!token){setError(\"You must be logged in to add a reservation.\");return;}const newReservation={room_id:selectedRoom,email:formData.email,start_time:\"\".concat(formData.date,\"T\").concat(formData.time,\":00\"),end_time:\"\".concat(formData.date,\"T\").concat(parseInt(formData.time.split(\":\")[0])+1,\":00:00\")};// Add to Google Calendar\naddReservationToGoogleCalendar(newReservation);// Reset form\nsetFormData({date:\"\",time:\"\",email:\"\"});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Room Reservations\"),error&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},error),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleReservation},/*#__PURE__*/React.createElement(\"label\",null,\"Room: \"),/*#__PURE__*/React.createElement(\"select\",{onChange:handleRoomChange,value:selectedRoom,required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select a room\"),rooms.map(room=>/*#__PURE__*/React.createElement(\"option\",{key:room.id,value:room.id},room.name))),/*#__PURE__*/React.createElement(\"label\",null,\"Date: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"date\",value:formData.date,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{date:e.target.value})),required:true}),/*#__PURE__*/React.createElement(\"label\",null,\"Time: \"),/*#__PURE__*/React.createElement(\"select\",{value:formData.time,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{time:e.target.value})),required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select a time\"),availableTimes.map(time=>/*#__PURE__*/React.createElement(\"option\",{key:time,value:time},time))),/*#__PURE__*/React.createElement(\"label\",null,\"Email: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",value:formData.email,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{email:e.target.value})),required:true}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Reserve\")),/*#__PURE__*/React.createElement(FullCalendar,{plugins:[dayGridPlugin,interactionPlugin],initialView:\"dayGridMonth\",events:events,headerToolbar:{left:\"prev,next today\",center:\"title\",right:\"dayGridMonth,dayGridWeek,dayGridDay\"}}));}export default Reserve;","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","CLIENT_ID","SCOPES","Reserve","events","setEvents","error","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","initializeGIS","tokenClient","google","accounts","oauth2","initTokenClient","client_id","scope","callback","response","access_token","loadEvents","requestAccessToken","checkGoogleLoaded","setTimeout","accessToken","gapi","load","client","init","apiKey","clientId","then","request","path","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","console","addReservationToGoogleCalendar","reservation","calendar","insert","calendarId","resource","concat","room_id","start_time","timeZone","end_time","prevEvents","alert","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","newReservation","parseInt","split","createElement","style","color","onSubmit","onChange","required","disabled","key","type","_objectSpread","plugins","initialView","headerToolbar","left","center","right"],"sources":["C:/Users/DELL/OneDrive/Bureau/S5/cloud-project/src/components/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\"; // Replace with your Google OAuth Client ID\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]); // Calendar events\r\n  const [error, setError] = useState(null); // Error messages\r\n  const [token, setToken] = useState(null); // Google OAuth token\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Selected room\r\n  const [availableTimes, setAvailableTimes] = useState([]); // Available times\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  // Initialize Google API and authenticate\r\n  useEffect(() => {\r\n    const initializeGIS = () => {\r\n      /* eslint-disable no-undef */\r\n      const tokenClient = google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (response) => {\r\n          if (response.access_token) {\r\n            setToken(response.access_token);\r\n            loadEvents(response.access_token);\r\n          } else {\r\n            setError(\"Error obtaining Google token.\");\r\n          }\r\n        },\r\n      });\r\n\r\n      tokenClient.requestAccessToken();\r\n    };\r\n\r\n    const checkGoogleLoaded = () => {\r\n      if (typeof google === \"undefined\") {\r\n        setTimeout(checkGoogleLoaded, 100);\r\n      } else {\r\n        initializeGIS();\r\n      }\r\n    };\r\n\r\n    checkGoogleLoaded();\r\n  }, []);\r\n\r\n  // Load events from Google Calendar\r\n  const loadEvents = (accessToken) => {\r\n    gapi.load(\"client\", () => {\r\n      gapi.client\r\n        .init({\r\n          apiKey: \"\",\r\n          clientId: CLIENT_ID,\r\n          scope: SCOPES,\r\n        })\r\n        .then(() => {\r\n          return gapi.client.request({\r\n            path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\r\n          });\r\n        })\r\n        .then((response) => {\r\n          const formattedEvents = response.result.items.map((event) => ({\r\n            title: event.summary,\r\n            start: event.start.dateTime,\r\n            end: event.end.dateTime,\r\n          }));\r\n          setEvents(formattedEvents);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading events from Google Calendar:\", error);\r\n          setError(\"Failed to load events. Please try again.\");\r\n        });\r\n    });\r\n  };\r\n\r\n  // Add a reservation to Google Calendar\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    gapi.client.calendar.events\r\n      .insert({\r\n        calendarId: \"primary\",\r\n        resource: {\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // Add the reservation locally to events\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(`Reservation confirmed and added to Google Calendar.`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding reservation to Google Calendar:\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      setError(\"You must be logged in to add a reservation.\");\r\n      return;\r\n    }\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    // Add to Google Calendar\r\n    addReservationToGoogleCalendar(newReservation);\r\n\r\n    // Reset form\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room: </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time: </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}