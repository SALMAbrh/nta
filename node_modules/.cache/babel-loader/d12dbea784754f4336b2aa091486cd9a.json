{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Bureau\\\\S5\\\\cloud-project\\\\src\\\\components\\\\Reserve.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport firebaseApp from \"./firebase\";\nconst CLIENT_ID = \"VOTRE_CLIENT_ID.apps.googleusercontent.com\"; // Remplacez par votre ID client OAuth\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction Reserve() {\n  const [events, setEvents] = useState([]); // Événements du calendrier\n  const [error, setError] = useState(null); // Messages d'erreur\n  const [token, setToken] = useState(null); // Google OAuth token\n  const [user, setUser] = useState(null); // Utilisateur connecté via Firebase\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Salle sélectionnée\n  const [availableTimes, setAvailableTimes] = useState([]); // Horaires disponibles\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: \"\"\n  });\n  const rooms = [{\n    id: \"room1\",\n    name: \"Room 1\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room2\",\n    name: \"Room 2\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n  const auth = getAuth(firebaseApp);\n\n  // Authentifiez l'utilisateur via Firebase\n  const handleFirebaseLogin = async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const accessToken = credential.accessToken;\n      setUser(result.user);\n      setToken(accessToken);\n      console.log(\"Utilisateur connecté :\", result.user);\n\n      // Chargez les événements après la connexion\n      loadEvents(accessToken);\n    } catch (error) {\n      console.error(\"Erreur d'authentification Firebase :\", error);\n      setError(\"Failed to log in. Please try again.\");\n    }\n  };\n\n  // Chargez les événements de Google Calendar\n  const loadEvents = accessToken => {\n    gapi.load(\"client\", () => {\n      gapi.client.init({\n        apiKey: \"\",\n        // Ajoutez votre clé API Google si nécessaire\n        clientId: CLIENT_ID,\n        scope: SCOPES\n      }).then(() => {\n        return gapi.client.request({\n          path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n      }).then(response => {\n        const formattedEvents = response.result.items.map(event => ({\n          title: event.summary,\n          start: event.start.dateTime,\n          end: event.end.dateTime\n        }));\n        setEvents(formattedEvents);\n      }).catch(error => {\n        console.error(\"Erreur lors du chargement des événements :\", error);\n        setError(\"Failed to load events. Please try again.\");\n      });\n    });\n  };\n\n  // Ajoutez une réservation dans Google Calendar\n  const addReservationToGoogleCalendar = reservation => {\n    gapi.client.calendar.events.insert({\n      calendarId: \"primary\",\n      resource: {\n        summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: {\n          dateTime: reservation.start_time,\n          timeZone: \"UTC\"\n        },\n        end: {\n          dateTime: reservation.end_time,\n          timeZone: \"UTC\"\n        }\n      }\n    }).then(() => {\n      setEvents(prevEvents => [...prevEvents, {\n        title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: reservation.start_time,\n        end: reservation.end_time\n      }]);\n      alert(\"Reservation confirmed and added to Google Calendar.\");\n    }).catch(error => {\n      console.error(\"Erreur lors de l'ajout de la réservation :\", error);\n      setError(\"Failed to add reservation. Please try again.\");\n    });\n  };\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n  const handleReservation = e => {\n    e.preventDefault();\n    if (!token) {\n      setError(\"You must be logged in to add a reservation.\");\n      return;\n    }\n    const newReservation = {\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}:00`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    };\n    addReservationToGoogleCalendar(newReservation);\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: \"\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Room Reservations\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, error), !user ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFirebaseLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Login with Google\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Welcome, \", user.displayName, \"!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleReservation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Room: \"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleRoomChange,\n    value: selectedRoom,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Select a room\"), rooms.map(room => /*#__PURE__*/React.createElement(\"option\", {\n    key: room.id,\n    value: room.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, room.name))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: formData.date,\n    onChange: e => setFormData({\n      ...formData,\n      date: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(\"select\", {\n    value: formData.time,\n    onChange: e => setFormData({\n      ...formData,\n      time: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Select a time\"), availableTimes.map(time => /*#__PURE__*/React.createElement(\"option\", {\n    key: time,\n    value: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, time))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: formData.email,\n    onChange: e => setFormData({\n      ...formData,\n      email: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \"Reserve\")), /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin],\n    initialView: \"dayGridMonth\",\n    events: events,\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Reserve;","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","getAuth","GoogleAuthProvider","signInWithPopup","firebaseApp","CLIENT_ID","SCOPES","Reserve","events","setEvents","error","setError","token","setToken","user","setUser","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","auth","handleFirebaseLogin","provider","result","credential","credentialFromResult","accessToken","console","log","loadEvents","gapi","load","client","init","apiKey","clientId","scope","then","request","path","headers","Authorization","response","formattedEvents","items","map","event","title","summary","start","dateTime","end","catch","addReservationToGoogleCalendar","reservation","calendar","insert","calendarId","resource","room_id","start_time","timeZone","end_time","prevEvents","alert","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","newReservation","parseInt","split","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","displayName","onSubmit","onChange","required","disabled","key","type","plugins","initialView","headerToolbar","left","center","right"],"sources":["C:/Users/DELL/OneDrive/Bureau/S5/cloud-project/src/components/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport firebaseApp from \"./firebase\";\r\n\r\nconst CLIENT_ID = \"VOTRE_CLIENT_ID.apps.googleusercontent.com\"; // Remplacez par votre ID client OAuth\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]); // Événements du calendrier\r\n  const [error, setError] = useState(null); // Messages d'erreur\r\n  const [token, setToken] = useState(null); // Google OAuth token\r\n  const [user, setUser] = useState(null); // Utilisateur connecté via Firebase\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Salle sélectionnée\r\n  const [availableTimes, setAvailableTimes] = useState([]); // Horaires disponibles\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  const auth = getAuth(firebaseApp);\r\n\r\n  // Authentifiez l'utilisateur via Firebase\r\n  const handleFirebaseLogin = async () => {\r\n    try {\r\n      const provider = new GoogleAuthProvider();\r\n      const result = await signInWithPopup(auth, provider);\r\n      const credential = GoogleAuthProvider.credentialFromResult(result);\r\n      const accessToken = credential.accessToken;\r\n\r\n      setUser(result.user);\r\n      setToken(accessToken);\r\n      console.log(\"Utilisateur connecté :\", result.user);\r\n\r\n      // Chargez les événements après la connexion\r\n      loadEvents(accessToken);\r\n    } catch (error) {\r\n      console.error(\"Erreur d'authentification Firebase :\", error);\r\n      setError(\"Failed to log in. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Chargez les événements de Google Calendar\r\n  const loadEvents = (accessToken) => {\r\n    gapi.load(\"client\", () => {\r\n      gapi.client\r\n        .init({\r\n          apiKey: \"\", // Ajoutez votre clé API Google si nécessaire\r\n          clientId: CLIENT_ID,\r\n          scope: SCOPES,\r\n        })\r\n        .then(() => {\r\n          return gapi.client.request({\r\n            path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n        })\r\n        .then((response) => {\r\n          const formattedEvents = response.result.items.map((event) => ({\r\n            title: event.summary,\r\n            start: event.start.dateTime,\r\n            end: event.end.dateTime,\r\n          }));\r\n          setEvents(formattedEvents);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Erreur lors du chargement des événements :\", error);\r\n          setError(\"Failed to load events. Please try again.\");\r\n        });\r\n    });\r\n  };\r\n\r\n  // Ajoutez une réservation dans Google Calendar\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    gapi.client.calendar.events\r\n      .insert({\r\n        calendarId: \"primary\",\r\n        resource: {\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        },\r\n      })\r\n      .then(() => {\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(\"Reservation confirmed and added to Google Calendar.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors de l'ajout de la réservation :\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      setError(\"You must be logged in to add a reservation.\");\r\n      return;\r\n    }\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    addReservationToGoogleCalendar(newReservation);\r\n\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {!user ? (\r\n        <button onClick={handleFirebaseLogin}>Login with Google</button>\r\n      ) : (\r\n        <p>Welcome, {user.displayName}!</p>\r\n      )}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room: </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time: </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}